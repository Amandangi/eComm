// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using Microsoft.ML;
using ECommerceML.Model;

namespace ECommerceML.ConsoleApp
{
    class Program
    {
        //Dataset to use for predictions 
        private const string DATA_FILEPATH = @"C:\Users\LENOVO\Documents\512289 (1).csv";

        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = CreateSingleDataSample(DATA_FILEPATH);

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Open_Price with predicted Open_Price from sample data...\n\n");
            Console.WriteLine($"Date: {sampleData.Date}");
            Console.WriteLine($"High Price: {sampleData.High_Price}");
            Console.WriteLine($"Low Price: {sampleData.Low_Price}");
            Console.WriteLine($"Close Price: {sampleData.Close_Price}");
            Console.WriteLine($"WAP: {sampleData.WAP}");
            Console.WriteLine($"No.of Shares: {sampleData.No_of_Shares}");
            Console.WriteLine($"No. of Trades: {sampleData.No__of_Trades}");
            Console.WriteLine($"Total Turnover (Rs.): {sampleData.Total_Turnover__Rs__}");
            Console.WriteLine($"Deliverable Quantity: {sampleData.Deliverable_Quantity}");
            Console.WriteLine($"% Deli. Qty to Traded Qty: {sampleData.__Deli__Qty_to_Traded_Qty}");
            Console.WriteLine($"Spread High-Low: {sampleData.Spread_High_Low}");
            Console.WriteLine($"Spread Close-Open: {sampleData.Spread_Close_Open}");
            Console.WriteLine($"\n\nActual Open_Price: {sampleData.Open_Price} \nPredicted Open_Price: {predictionResult.Score}\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample(string dataFilePath)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: ',',
                                            allowQuoting: true,
                                            allowSparse: false);

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)
                                                                        .First();
            return sampleForPrediction;
        }
        #endregion
    }
}
